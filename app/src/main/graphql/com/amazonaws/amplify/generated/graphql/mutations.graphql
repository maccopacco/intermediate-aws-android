# this is an auto generated file. This will be overwritten
mutation CreateTestGoal(
  $input: CreateTestGoalInput!
  $condition: ModelTestGoalConditionInput
) {
  createTestGoal(input: $input, condition: $condition) {
    id
    content
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation UpdateTestGoal(
  $input: UpdateTestGoalInput!
  $condition: ModelTestGoalConditionInput
) {
  updateTestGoal(input: $input, condition: $condition) {
    id
    content
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation DeleteTestGoal(
  $input: DeleteTestGoalInput!
  $condition: ModelTestGoalConditionInput
) {
  deleteTestGoal(input: $input, condition: $condition) {
    id
    content
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation CreateUser(
  $input: CreateUserInput!
  $condition: ModelUserConditionInput
) {
  createUser(input: $input, condition: $condition) {
    id
    googleID
    originalEmail
    banks {
      items {
        id
        plaid_access_token
        institution_id
        institution_name
        institution_logo
        last_touched_time
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      nextToken
      startedAt
    }
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation UpdateUser(
  $input: UpdateUserInput!
  $condition: ModelUserConditionInput
) {
  updateUser(input: $input, condition: $condition) {
    id
    googleID
    originalEmail
    banks {
      items {
        id
        plaid_access_token
        institution_id
        institution_name
        institution_logo
        last_touched_time
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      nextToken
      startedAt
    }
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation DeleteUser(
  $input: DeleteUserInput!
  $condition: ModelUserConditionInput
) {
  deleteUser(input: $input, condition: $condition) {
    id
    googleID
    originalEmail
    banks {
      items {
        id
        plaid_access_token
        institution_id
        institution_name
        institution_logo
        last_touched_time
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      nextToken
      startedAt
    }
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation CreateBank(
  $input: CreateBankInput!
  $condition: ModelBankConditionInput
) {
  createBank(input: $input, condition: $condition) {
    id
    user {
      id
      googleID
      originalEmail
      banks {
        nextToken
        startedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    plaid_access_token
    institution_id
    institution_name
    institution_logo
    last_touched_time
    userData {
      id
      bank {
        id
        plaid_access_token
        institution_id
        institution_name
        institution_logo
        last_touched_time
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      transactions {
        nextToken
        startedAt
      }
      max_import_batch
      oldest_pending_time
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation UpdateBank(
  $input: UpdateBankInput!
  $condition: ModelBankConditionInput
) {
  updateBank(input: $input, condition: $condition) {
    id
    user {
      id
      googleID
      originalEmail
      banks {
        nextToken
        startedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    plaid_access_token
    institution_id
    institution_name
    institution_logo
    last_touched_time
    userData {
      id
      bank {
        id
        plaid_access_token
        institution_id
        institution_name
        institution_logo
        last_touched_time
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      transactions {
        nextToken
        startedAt
      }
      max_import_batch
      oldest_pending_time
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation DeleteBank(
  $input: DeleteBankInput!
  $condition: ModelBankConditionInput
) {
  deleteBank(input: $input, condition: $condition) {
    id
    user {
      id
      googleID
      originalEmail
      banks {
        nextToken
        startedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    plaid_access_token
    institution_id
    institution_name
    institution_logo
    last_touched_time
    userData {
      id
      bank {
        id
        plaid_access_token
        institution_id
        institution_name
        institution_logo
        last_touched_time
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      transactions {
        nextToken
        startedAt
      }
      max_import_batch
      oldest_pending_time
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation CreateUserData(
  $input: CreateUserDataInput!
  $condition: ModelUserDataConditionInput
) {
  createUserData(input: $input, condition: $condition) {
    id
    bank {
      id
      user {
        id
        googleID
        originalEmail
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      plaid_access_token
      institution_id
      institution_name
      institution_logo
      last_touched_time
      userData {
        id
        max_import_batch
        oldest_pending_time
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    transactions {
      items {
        id
        importBatch
        importDate
        importSource
        plaidID
        overrideName
        memo
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      nextToken
      startedAt
    }
    max_import_batch
    oldest_pending_time
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation UpdateUserData(
  $input: UpdateUserDataInput!
  $condition: ModelUserDataConditionInput
) {
  updateUserData(input: $input, condition: $condition) {
    id
    bank {
      id
      user {
        id
        googleID
        originalEmail
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      plaid_access_token
      institution_id
      institution_name
      institution_logo
      last_touched_time
      userData {
        id
        max_import_batch
        oldest_pending_time
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    transactions {
      items {
        id
        importBatch
        importDate
        importSource
        plaidID
        overrideName
        memo
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      nextToken
      startedAt
    }
    max_import_batch
    oldest_pending_time
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation DeleteUserData(
  $input: DeleteUserDataInput!
  $condition: ModelUserDataConditionInput
) {
  deleteUserData(input: $input, condition: $condition) {
    id
    bank {
      id
      user {
        id
        googleID
        originalEmail
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      plaid_access_token
      institution_id
      institution_name
      institution_logo
      last_touched_time
      userData {
        id
        max_import_batch
        oldest_pending_time
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    transactions {
      items {
        id
        importBatch
        importDate
        importSource
        plaidID
        overrideName
        memo
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      nextToken
      startedAt
    }
    max_import_batch
    oldest_pending_time
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation CreateTransactionWrapper(
  $input: CreateTransactionWrapperInput!
  $condition: ModelTransactionWrapperConditionInput
) {
  createTransactionWrapper(input: $input, condition: $condition) {
    id
    importBatch
    importDate
    importSource
    plaidID
    userData {
      id
      bank {
        id
        plaid_access_token
        institution_id
        institution_name
        institution_logo
        last_touched_time
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      transactions {
        nextToken
        startedAt
      }
      max_import_batch
      oldest_pending_time
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    transaction {
      id
      wrapper {
        id
        importBatch
        importDate
        importSource
        plaidID
        overrideName
        memo
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      accountId
      amount
      isoCurrencyCode
      unofficialCurrencyCode
      categoryFolder
      category
      categoryId
      date
      exactTime
      location {
        id
        address
        city
        lat
        lon
        region
        storeNumber
        postalCode
        country
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      merchantName
      name
      originalDescription
      paymentMeta {
        id
        byOrderOf
        payee
        payer
        paymentMethod
        paymentProcessor
        ppdId
        reason
        referenceNumber
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      pending
      pendingTransactionId
      transactionId
      transactionType
      accountOwner
      authorizedDate
      transactionCode
      paymentChannel
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    overrideName
    memo
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation UpdateTransactionWrapper(
  $input: UpdateTransactionWrapperInput!
  $condition: ModelTransactionWrapperConditionInput
) {
  updateTransactionWrapper(input: $input, condition: $condition) {
    id
    importBatch
    importDate
    importSource
    plaidID
    userData {
      id
      bank {
        id
        plaid_access_token
        institution_id
        institution_name
        institution_logo
        last_touched_time
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      transactions {
        nextToken
        startedAt
      }
      max_import_batch
      oldest_pending_time
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    transaction {
      id
      wrapper {
        id
        importBatch
        importDate
        importSource
        plaidID
        overrideName
        memo
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      accountId
      amount
      isoCurrencyCode
      unofficialCurrencyCode
      categoryFolder
      category
      categoryId
      date
      exactTime
      location {
        id
        address
        city
        lat
        lon
        region
        storeNumber
        postalCode
        country
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      merchantName
      name
      originalDescription
      paymentMeta {
        id
        byOrderOf
        payee
        payer
        paymentMethod
        paymentProcessor
        ppdId
        reason
        referenceNumber
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      pending
      pendingTransactionId
      transactionId
      transactionType
      accountOwner
      authorizedDate
      transactionCode
      paymentChannel
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    overrideName
    memo
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation DeleteTransactionWrapper(
  $input: DeleteTransactionWrapperInput!
  $condition: ModelTransactionWrapperConditionInput
) {
  deleteTransactionWrapper(input: $input, condition: $condition) {
    id
    importBatch
    importDate
    importSource
    plaidID
    userData {
      id
      bank {
        id
        plaid_access_token
        institution_id
        institution_name
        institution_logo
        last_touched_time
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      transactions {
        nextToken
        startedAt
      }
      max_import_batch
      oldest_pending_time
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    transaction {
      id
      wrapper {
        id
        importBatch
        importDate
        importSource
        plaidID
        overrideName
        memo
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      accountId
      amount
      isoCurrencyCode
      unofficialCurrencyCode
      categoryFolder
      category
      categoryId
      date
      exactTime
      location {
        id
        address
        city
        lat
        lon
        region
        storeNumber
        postalCode
        country
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      merchantName
      name
      originalDescription
      paymentMeta {
        id
        byOrderOf
        payee
        payer
        paymentMethod
        paymentProcessor
        ppdId
        reason
        referenceNumber
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      pending
      pendingTransactionId
      transactionId
      transactionType
      accountOwner
      authorizedDate
      transactionCode
      paymentChannel
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    overrideName
    memo
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation CreateTransaction(
  $input: CreateTransactionInput!
  $condition: ModelTransactionConditionInput
) {
  createTransaction(input: $input, condition: $condition) {
    id
    wrapper {
      id
      importBatch
      importDate
      importSource
      plaidID
      userData {
        id
        max_import_batch
        oldest_pending_time
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      transaction {
        id
        accountId
        amount
        isoCurrencyCode
        unofficialCurrencyCode
        categoryFolder
        category
        categoryId
        date
        exactTime
        merchantName
        name
        originalDescription
        pending
        pendingTransactionId
        transactionId
        transactionType
        accountOwner
        authorizedDate
        transactionCode
        paymentChannel
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      overrideName
      memo
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    accountId
    amount
    isoCurrencyCode
    unofficialCurrencyCode
    categoryFolder
    category
    categoryId
    date
    exactTime
    location {
      id
      transaction {
        id
        accountId
        amount
        isoCurrencyCode
        unofficialCurrencyCode
        categoryFolder
        category
        categoryId
        date
        exactTime
        merchantName
        name
        originalDescription
        pending
        pendingTransactionId
        transactionId
        transactionType
        accountOwner
        authorizedDate
        transactionCode
        paymentChannel
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      address
      city
      lat
      lon
      region
      storeNumber
      postalCode
      country
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    merchantName
    name
    originalDescription
    paymentMeta {
      id
      transaction {
        id
        accountId
        amount
        isoCurrencyCode
        unofficialCurrencyCode
        categoryFolder
        category
        categoryId
        date
        exactTime
        merchantName
        name
        originalDescription
        pending
        pendingTransactionId
        transactionId
        transactionType
        accountOwner
        authorizedDate
        transactionCode
        paymentChannel
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      byOrderOf
      payee
      payer
      paymentMethod
      paymentProcessor
      ppdId
      reason
      referenceNumber
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    pending
    pendingTransactionId
    transactionId
    transactionType
    accountOwner
    authorizedDate
    transactionCode
    paymentChannel
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation UpdateTransaction(
  $input: UpdateTransactionInput!
  $condition: ModelTransactionConditionInput
) {
  updateTransaction(input: $input, condition: $condition) {
    id
    wrapper {
      id
      importBatch
      importDate
      importSource
      plaidID
      userData {
        id
        max_import_batch
        oldest_pending_time
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      transaction {
        id
        accountId
        amount
        isoCurrencyCode
        unofficialCurrencyCode
        categoryFolder
        category
        categoryId
        date
        exactTime
        merchantName
        name
        originalDescription
        pending
        pendingTransactionId
        transactionId
        transactionType
        accountOwner
        authorizedDate
        transactionCode
        paymentChannel
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      overrideName
      memo
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    accountId
    amount
    isoCurrencyCode
    unofficialCurrencyCode
    categoryFolder
    category
    categoryId
    date
    exactTime
    location {
      id
      transaction {
        id
        accountId
        amount
        isoCurrencyCode
        unofficialCurrencyCode
        categoryFolder
        category
        categoryId
        date
        exactTime
        merchantName
        name
        originalDescription
        pending
        pendingTransactionId
        transactionId
        transactionType
        accountOwner
        authorizedDate
        transactionCode
        paymentChannel
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      address
      city
      lat
      lon
      region
      storeNumber
      postalCode
      country
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    merchantName
    name
    originalDescription
    paymentMeta {
      id
      transaction {
        id
        accountId
        amount
        isoCurrencyCode
        unofficialCurrencyCode
        categoryFolder
        category
        categoryId
        date
        exactTime
        merchantName
        name
        originalDescription
        pending
        pendingTransactionId
        transactionId
        transactionType
        accountOwner
        authorizedDate
        transactionCode
        paymentChannel
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      byOrderOf
      payee
      payer
      paymentMethod
      paymentProcessor
      ppdId
      reason
      referenceNumber
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    pending
    pendingTransactionId
    transactionId
    transactionType
    accountOwner
    authorizedDate
    transactionCode
    paymentChannel
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation DeleteTransaction(
  $input: DeleteTransactionInput!
  $condition: ModelTransactionConditionInput
) {
  deleteTransaction(input: $input, condition: $condition) {
    id
    wrapper {
      id
      importBatch
      importDate
      importSource
      plaidID
      userData {
        id
        max_import_batch
        oldest_pending_time
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      transaction {
        id
        accountId
        amount
        isoCurrencyCode
        unofficialCurrencyCode
        categoryFolder
        category
        categoryId
        date
        exactTime
        merchantName
        name
        originalDescription
        pending
        pendingTransactionId
        transactionId
        transactionType
        accountOwner
        authorizedDate
        transactionCode
        paymentChannel
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      overrideName
      memo
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    accountId
    amount
    isoCurrencyCode
    unofficialCurrencyCode
    categoryFolder
    category
    categoryId
    date
    exactTime
    location {
      id
      transaction {
        id
        accountId
        amount
        isoCurrencyCode
        unofficialCurrencyCode
        categoryFolder
        category
        categoryId
        date
        exactTime
        merchantName
        name
        originalDescription
        pending
        pendingTransactionId
        transactionId
        transactionType
        accountOwner
        authorizedDate
        transactionCode
        paymentChannel
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      address
      city
      lat
      lon
      region
      storeNumber
      postalCode
      country
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    merchantName
    name
    originalDescription
    paymentMeta {
      id
      transaction {
        id
        accountId
        amount
        isoCurrencyCode
        unofficialCurrencyCode
        categoryFolder
        category
        categoryId
        date
        exactTime
        merchantName
        name
        originalDescription
        pending
        pendingTransactionId
        transactionId
        transactionType
        accountOwner
        authorizedDate
        transactionCode
        paymentChannel
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      byOrderOf
      payee
      payer
      paymentMethod
      paymentProcessor
      ppdId
      reason
      referenceNumber
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    pending
    pendingTransactionId
    transactionId
    transactionType
    accountOwner
    authorizedDate
    transactionCode
    paymentChannel
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation CreatePaymentMeta(
  $input: CreatePaymentMetaInput!
  $condition: ModelPaymentMetaConditionInput
) {
  createPaymentMeta(input: $input, condition: $condition) {
    id
    transaction {
      id
      wrapper {
        id
        importBatch
        importDate
        importSource
        plaidID
        overrideName
        memo
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      accountId
      amount
      isoCurrencyCode
      unofficialCurrencyCode
      categoryFolder
      category
      categoryId
      date
      exactTime
      location {
        id
        address
        city
        lat
        lon
        region
        storeNumber
        postalCode
        country
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      merchantName
      name
      originalDescription
      paymentMeta {
        id
        byOrderOf
        payee
        payer
        paymentMethod
        paymentProcessor
        ppdId
        reason
        referenceNumber
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      pending
      pendingTransactionId
      transactionId
      transactionType
      accountOwner
      authorizedDate
      transactionCode
      paymentChannel
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    byOrderOf
    payee
    payer
    paymentMethod
    paymentProcessor
    ppdId
    reason
    referenceNumber
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation UpdatePaymentMeta(
  $input: UpdatePaymentMetaInput!
  $condition: ModelPaymentMetaConditionInput
) {
  updatePaymentMeta(input: $input, condition: $condition) {
    id
    transaction {
      id
      wrapper {
        id
        importBatch
        importDate
        importSource
        plaidID
        overrideName
        memo
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      accountId
      amount
      isoCurrencyCode
      unofficialCurrencyCode
      categoryFolder
      category
      categoryId
      date
      exactTime
      location {
        id
        address
        city
        lat
        lon
        region
        storeNumber
        postalCode
        country
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      merchantName
      name
      originalDescription
      paymentMeta {
        id
        byOrderOf
        payee
        payer
        paymentMethod
        paymentProcessor
        ppdId
        reason
        referenceNumber
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      pending
      pendingTransactionId
      transactionId
      transactionType
      accountOwner
      authorizedDate
      transactionCode
      paymentChannel
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    byOrderOf
    payee
    payer
    paymentMethod
    paymentProcessor
    ppdId
    reason
    referenceNumber
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation DeletePaymentMeta(
  $input: DeletePaymentMetaInput!
  $condition: ModelPaymentMetaConditionInput
) {
  deletePaymentMeta(input: $input, condition: $condition) {
    id
    transaction {
      id
      wrapper {
        id
        importBatch
        importDate
        importSource
        plaidID
        overrideName
        memo
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      accountId
      amount
      isoCurrencyCode
      unofficialCurrencyCode
      categoryFolder
      category
      categoryId
      date
      exactTime
      location {
        id
        address
        city
        lat
        lon
        region
        storeNumber
        postalCode
        country
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      merchantName
      name
      originalDescription
      paymentMeta {
        id
        byOrderOf
        payee
        payer
        paymentMethod
        paymentProcessor
        ppdId
        reason
        referenceNumber
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      pending
      pendingTransactionId
      transactionId
      transactionType
      accountOwner
      authorizedDate
      transactionCode
      paymentChannel
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    byOrderOf
    payee
    payer
    paymentMethod
    paymentProcessor
    ppdId
    reason
    referenceNumber
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation CreateLocation(
  $input: CreateLocationInput!
  $condition: ModelLocationConditionInput
) {
  createLocation(input: $input, condition: $condition) {
    id
    transaction {
      id
      wrapper {
        id
        importBatch
        importDate
        importSource
        plaidID
        overrideName
        memo
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      accountId
      amount
      isoCurrencyCode
      unofficialCurrencyCode
      categoryFolder
      category
      categoryId
      date
      exactTime
      location {
        id
        address
        city
        lat
        lon
        region
        storeNumber
        postalCode
        country
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      merchantName
      name
      originalDescription
      paymentMeta {
        id
        byOrderOf
        payee
        payer
        paymentMethod
        paymentProcessor
        ppdId
        reason
        referenceNumber
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      pending
      pendingTransactionId
      transactionId
      transactionType
      accountOwner
      authorizedDate
      transactionCode
      paymentChannel
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    address
    city
    lat
    lon
    region
    storeNumber
    postalCode
    country
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation UpdateLocation(
  $input: UpdateLocationInput!
  $condition: ModelLocationConditionInput
) {
  updateLocation(input: $input, condition: $condition) {
    id
    transaction {
      id
      wrapper {
        id
        importBatch
        importDate
        importSource
        plaidID
        overrideName
        memo
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      accountId
      amount
      isoCurrencyCode
      unofficialCurrencyCode
      categoryFolder
      category
      categoryId
      date
      exactTime
      location {
        id
        address
        city
        lat
        lon
        region
        storeNumber
        postalCode
        country
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      merchantName
      name
      originalDescription
      paymentMeta {
        id
        byOrderOf
        payee
        payer
        paymentMethod
        paymentProcessor
        ppdId
        reason
        referenceNumber
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      pending
      pendingTransactionId
      transactionId
      transactionType
      accountOwner
      authorizedDate
      transactionCode
      paymentChannel
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    address
    city
    lat
    lon
    region
    storeNumber
    postalCode
    country
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
mutation DeleteLocation(
  $input: DeleteLocationInput!
  $condition: ModelLocationConditionInput
) {
  deleteLocation(input: $input, condition: $condition) {
    id
    transaction {
      id
      wrapper {
        id
        importBatch
        importDate
        importSource
        plaidID
        overrideName
        memo
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      accountId
      amount
      isoCurrencyCode
      unofficialCurrencyCode
      categoryFolder
      category
      categoryId
      date
      exactTime
      location {
        id
        address
        city
        lat
        lon
        region
        storeNumber
        postalCode
        country
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      merchantName
      name
      originalDescription
      paymentMeta {
        id
        byOrderOf
        payee
        payer
        paymentMethod
        paymentProcessor
        ppdId
        reason
        referenceNumber
        _version
        _deleted
        _lastChangedAt
        createdAt
        updatedAt
      }
      pending
      pendingTransactionId
      transactionId
      transactionType
      accountOwner
      authorizedDate
      transactionCode
      paymentChannel
      _version
      _deleted
      _lastChangedAt
      createdAt
      updatedAt
    }
    address
    city
    lat
    lon
    region
    storeNumber
    postalCode
    country
    _version
    _deleted
    _lastChangedAt
    createdAt
    updatedAt
  }
}
